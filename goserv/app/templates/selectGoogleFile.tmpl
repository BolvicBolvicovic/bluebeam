<!DOCTYPE html>
<html>
<head>
    <title>Select Google Spreadsheet</title>
    <script type="text/javascript" src="https://apis.google.com/js/api.js"></script>
</head>
<body onload="loadPicker()">
    <h2>Select a Google Spreadsheet</h2>
    <button onclick="loadPicker()">Open Google Picker</button>

    <script type="text/javascript">
        let oauthToken = "{{.token}}"; 
        function loadPicker() {
            gapi.load('auth', { 'callback': onAuthApiLoad });
            gapi.load('picker', { 'callback': onPickerApiLoad });
        }

        function onAuthApiLoad() {
            if (oauthToken) {
                createPicker();
            }
        }

        function onPickerApiLoad() {
            createPicker();
        }

        function createPicker() {
            if (!oauthToken) {
                console.error("OAuth token not available");
                return;
            }
            
            const picker = new google.picker.PickerBuilder()
                .addView(google.picker.ViewId.SPREADSHEETS)
                .setOAuthToken(oauthToken)
                .setDeveloperKey('YOUR_API_KEY')
                .setCallback(pickerCallback)
                .build();
            picker.setVisible(true);
        }

        function pickerCallback(data) {
            if (data.action === google.picker.Action.PICKED) {
                const fileId = data.docs[0].id;
                fetch('/processGoogleSpreadsheet', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        username: "{{.username}}",
                        sessionKey: "{{.sessionkey}}",
                        fileid: fileId,
                        token: oauthToken
                    })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('File processed successfully:', data);
                    window.location.replace("https://localhost/settings");
                })
                .catch(error => {
                    console.error('Error processing file:', error);
                });
            }
        }
    </script>
</body>
</html>
